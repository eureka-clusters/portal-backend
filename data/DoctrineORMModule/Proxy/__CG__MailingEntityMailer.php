<?php

namespace DoctrineORMModule\Proxy\__CG__\Mailing\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Mailer extends \Mailing\Entity\Mailer implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Mailing\\Entity\\Mailer' . "\0" . 'id', '' . "\0" . 'Mailing\\Entity\\Mailer' . "\0" . 'name', '' . "\0" . 'Mailing\\Entity\\Mailer' . "\0" . 'service', '' . "\0" . 'Mailing\\Entity\\Mailer' . "\0" . 'hostname', '' . "\0" . 'Mailing\\Entity\\Mailer' . "\0" . 'username', '' . "\0" . 'Mailing\\Entity\\Mailer' . "\0" . 'password', '' . "\0" . 'Mailing\\Entity\\Mailer' . "\0" . 'port', '' . "\0" . 'Mailing\\Entity\\Mailer' . "\0" . 'ssl', '' . "\0" . 'Mailing\\Entity\\Mailer' . "\0" . 'sendGridApiKey', '' . "\0" . 'Mailing\\Entity\\Mailer' . "\0" . 'isDevelopment', '' . "\0" . 'Mailing\\Entity\\Mailer' . "\0" . 'isActive', '' . "\0" . 'Mailing\\Entity\\Mailer' . "\0" . 'transactional', '' . "\0" . 'Mailing\\Entity\\Mailer' . "\0" . 'emailMessage'];
        }

        return ['__isInitialized__', '' . "\0" . 'Mailing\\Entity\\Mailer' . "\0" . 'id', '' . "\0" . 'Mailing\\Entity\\Mailer' . "\0" . 'name', '' . "\0" . 'Mailing\\Entity\\Mailer' . "\0" . 'service', '' . "\0" . 'Mailing\\Entity\\Mailer' . "\0" . 'hostname', '' . "\0" . 'Mailing\\Entity\\Mailer' . "\0" . 'username', '' . "\0" . 'Mailing\\Entity\\Mailer' . "\0" . 'password', '' . "\0" . 'Mailing\\Entity\\Mailer' . "\0" . 'port', '' . "\0" . 'Mailing\\Entity\\Mailer' . "\0" . 'ssl', '' . "\0" . 'Mailing\\Entity\\Mailer' . "\0" . 'sendGridApiKey', '' . "\0" . 'Mailing\\Entity\\Mailer' . "\0" . 'isDevelopment', '' . "\0" . 'Mailing\\Entity\\Mailer' . "\0" . 'isActive', '' . "\0" . 'Mailing\\Entity\\Mailer' . "\0" . 'transactional', '' . "\0" . 'Mailing\\Entity\\Mailer' . "\0" . 'emailMessage'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Mailer $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function isMailjet(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isMailjet', []);

        return parent::isMailjet();
    }

    /**
     * {@inheritDoc}
     */
    public function isSendGrid(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSendGrid', []);

        return parent::isSendGrid();
    }

    /**
     * {@inheritDoc}
     */
    public function isSmtp(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSmtp', []);

        return parent::isSmtp();
    }

    /**
     * {@inheritDoc}
     */
    public function isSendmail(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSendmail', []);

        return parent::isSendmail();
    }

    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId(?int $id): \Mailing\Entity\Mailer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getName(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(string $name): \Mailing\Entity\Mailer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getService(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getService', []);

        return parent::getService();
    }

    /**
     * {@inheritDoc}
     */
    public function setService(int $service): \Mailing\Entity\Mailer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setService', [$service]);

        return parent::setService($service);
    }

    /**
     * {@inheritDoc}
     */
    public function getHostname(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHostname', []);

        return parent::getHostname();
    }

    /**
     * {@inheritDoc}
     */
    public function setHostname(?string $hostname): \Mailing\Entity\Mailer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHostname', [$hostname]);

        return parent::setHostname($hostname);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername(?string $username): \Mailing\Entity\Mailer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', [$username]);

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword(?string $password): \Mailing\Entity\Mailer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPort(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPort', []);

        return parent::getPort();
    }

    /**
     * {@inheritDoc}
     */
    public function setPort(?int $port): \Mailing\Entity\Mailer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPort', [$port]);

        return parent::setPort($port);
    }

    /**
     * {@inheritDoc}
     */
    public function getSsl(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSsl', []);

        return parent::getSsl();
    }

    /**
     * {@inheritDoc}
     */
    public function setSsl(?string $ssl): \Mailing\Entity\Mailer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSsl', [$ssl]);

        return parent::setSsl($ssl);
    }

    /**
     * {@inheritDoc}
     */
    public function getSendGridApiKey(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSendGridApiKey', []);

        return parent::getSendGridApiKey();
    }

    /**
     * {@inheritDoc}
     */
    public function setSendGridApiKey(?string $sendGridApiKey): \Mailing\Entity\Mailer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSendGridApiKey', [$sendGridApiKey]);

        return parent::setSendGridApiKey($sendGridApiKey);
    }

    /**
     * {@inheritDoc}
     */
    public function isDevelopment(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDevelopment', []);

        return parent::isDevelopment();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsDevelopment(bool $isDevelopment): \Mailing\Entity\Mailer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsDevelopment', [$isDevelopment]);

        return parent::setIsDevelopment($isDevelopment);
    }

    /**
     * {@inheritDoc}
     */
    public function isActive(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isActive', []);

        return parent::isActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsActive(bool $isActive): \Mailing\Entity\Mailer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsActive', [$isActive]);

        return parent::setIsActive($isActive);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransactional(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactional', []);

        return parent::getTransactional();
    }

    /**
     * {@inheritDoc}
     */
    public function setTransactional(\Doctrine\Common\Collections\Collection $transactional): \Mailing\Entity\Mailer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransactional', [$transactional]);

        return parent::setTransactional($transactional);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailMessage(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailMessage', []);

        return parent::getEmailMessage();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailMessage(\Doctrine\Common\Collections\Collection $emailMessage): \Mailing\Entity\Mailer
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailMessage', [$emailMessage]);

        return parent::setEmailMessage($emailMessage);
    }

    /**
     * {@inheritDoc}
     */
    public function getServiceText(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getServiceText', []);

        return parent::getServiceText();
    }

    /**
     * {@inheritDoc}
     */
    public function getResourceId(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResourceId', []);

        return parent::getResourceId();
    }

    /**
     * {@inheritDoc}
     */
    public function get(string $switch): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'get', [$switch]);

        return parent::get($switch);
    }

    /**
     * {@inheritDoc}
     */
    public function isEmpty(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEmpty', []);

        return parent::isEmpty();
    }

    /**
     * {@inheritDoc}
     */
    public function has(string $prop): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'has', [$prop]);

        return parent::has($prop);
    }

}
