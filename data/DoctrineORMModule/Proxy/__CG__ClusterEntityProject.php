<?php

namespace DoctrineORMModule\Proxy\__CG__\Cluster\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Project extends \Cluster\Entity\Project implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'id', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'identifier', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'slug', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'number', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'name', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'title', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'description', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'technicalArea', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'programme', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'programmeCall', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'primaryCluster', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'secondaryCluster', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'labelDate', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'cancelDate', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'officialStartDate', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'officialEndDate', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'status', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'projectLeader', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'versions', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'partners'];
        }

        return ['__isInitialized__', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'id', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'identifier', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'slug', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'number', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'name', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'title', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'description', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'technicalArea', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'programme', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'programmeCall', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'primaryCluster', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'secondaryCluster', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'labelDate', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'cancelDate', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'officialStartDate', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'officialEndDate', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'status', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'projectLeader', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'versions', '' . "\0" . 'Cluster\\Entity\\Project' . "\0" . 'partners'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Project $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function hasSecondaryCluster(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasSecondaryCluster', []);

        return parent::hasSecondaryCluster();
    }

    /**
     * {@inheritDoc}
     */
    public function getId(): int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId(int $id): \Cluster\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdentifier(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdentifier', []);

        return parent::getIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdentifier(string $identifier): \Cluster\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdentifier', [$identifier]);

        return parent::setIdentifier($identifier);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlug(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlug', []);

        return parent::getSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlug(string $slug): \Cluster\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlug', [$slug]);

        return parent::setSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumber(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumber', []);

        return parent::getNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumber(string $number): \Cluster\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumber', [$number]);

        return parent::setNumber($number);
    }

    /**
     * {@inheritDoc}
     */
    public function getName(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(string $name): \Cluster\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle(string $title): \Cluster\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription(string $description): \Cluster\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getTechnicalArea(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTechnicalArea', []);

        return parent::getTechnicalArea();
    }

    /**
     * {@inheritDoc}
     */
    public function setTechnicalArea(string $technicalArea): \Cluster\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTechnicalArea', [$technicalArea]);

        return parent::setTechnicalArea($technicalArea);
    }

    /**
     * {@inheritDoc}
     */
    public function getProgramme(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProgramme', []);

        return parent::getProgramme();
    }

    /**
     * {@inheritDoc}
     */
    public function setProgramme(string $programme): \Cluster\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProgramme', [$programme]);

        return parent::setProgramme($programme);
    }

    /**
     * {@inheritDoc}
     */
    public function getProgrammeCall(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProgrammeCall', []);

        return parent::getProgrammeCall();
    }

    /**
     * {@inheritDoc}
     */
    public function setProgrammeCall(string $programmeCall): \Cluster\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProgrammeCall', [$programmeCall]);

        return parent::setProgrammeCall($programmeCall);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrimaryCluster(): \Cluster\Entity\Cluster
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrimaryCluster', []);

        return parent::getPrimaryCluster();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrimaryCluster(\Cluster\Entity\Cluster $primaryCluster): \Cluster\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrimaryCluster', [$primaryCluster]);

        return parent::setPrimaryCluster($primaryCluster);
    }

    /**
     * {@inheritDoc}
     */
    public function getSecondaryCluster(): ?\Cluster\Entity\Cluster
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSecondaryCluster', []);

        return parent::getSecondaryCluster();
    }

    /**
     * {@inheritDoc}
     */
    public function setSecondaryCluster(?\Cluster\Entity\Cluster $secondaryCluster): \Cluster\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSecondaryCluster', [$secondaryCluster]);

        return parent::setSecondaryCluster($secondaryCluster);
    }

    /**
     * {@inheritDoc}
     */
    public function getLabelDate(): ?\DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLabelDate', []);

        return parent::getLabelDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setLabelDate(?\DateTime $labelDate): \Cluster\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLabelDate', [$labelDate]);

        return parent::setLabelDate($labelDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getCancelDate(): ?\DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCancelDate', []);

        return parent::getCancelDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setCancelDate(?\DateTime $cancelDate): \Cluster\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCancelDate', [$cancelDate]);

        return parent::setCancelDate($cancelDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getOfficialStartDate(): ?\DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOfficialStartDate', []);

        return parent::getOfficialStartDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setOfficialStartDate(?\DateTime $officialStartDate): \Cluster\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOfficialStartDate', [$officialStartDate]);

        return parent::setOfficialStartDate($officialStartDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getOfficialEndDate(): ?\DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOfficialEndDate', []);

        return parent::getOfficialEndDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setOfficialEndDate(?\DateTime $officialEndDate): \Cluster\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOfficialEndDate', [$officialEndDate]);

        return parent::setOfficialEndDate($officialEndDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus(): \Cluster\Entity\Project\Status
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus(\Cluster\Entity\Project\Status $status): \Cluster\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjectLeader(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjectLeader', []);

        return parent::getProjectLeader();
    }

    /**
     * {@inheritDoc}
     */
    public function setProjectLeader(array $projectLeader): \Cluster\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProjectLeader', [$projectLeader]);

        return parent::setProjectLeader($projectLeader);
    }

    /**
     * {@inheritDoc}
     */
    public function getVersions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVersions', []);

        return parent::getVersions();
    }

    /**
     * {@inheritDoc}
     */
    public function setVersions($versions): \Cluster\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVersions', [$versions]);

        return parent::setVersions($versions);
    }

    /**
     * {@inheritDoc}
     */
    public function getLatestVersion(): ?\Cluster\Entity\Project\Version
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLatestVersion', []);

        return parent::getLatestVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function getCoordinatorPartner(): ?\Cluster\Entity\Project\Partner
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCoordinatorPartner', []);

        return parent::getCoordinatorPartner();
    }

    /**
     * {@inheritDoc}
     */
    public function getPartners()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPartners', []);

        return parent::getPartners();
    }

    /**
     * {@inheritDoc}
     */
    public function setPartners($partners): \Cluster\Entity\Project
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPartners', [$partners]);

        return parent::setPartners($partners);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getResourceId(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResourceId', []);

        return parent::getResourceId();
    }

    /**
     * {@inheritDoc}
     */
    public function get(string $switch): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'get', [$switch]);

        return parent::get($switch);
    }

    /**
     * {@inheritDoc}
     */
    public function isEmpty(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEmpty', []);

        return parent::isEmpty();
    }

    /**
     * {@inheritDoc}
     */
    public function has(string $prop): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'has', [$prop]);

        return parent::has($prop);
    }

}
