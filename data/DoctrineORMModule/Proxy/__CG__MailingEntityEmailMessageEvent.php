<?php

namespace DoctrineORMModule\Proxy\__CG__\Mailing\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class EmailMessageEvent extends \Mailing\Entity\EmailMessageEvent implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Mailing\\Entity\\EmailMessageEvent' . "\0" . 'id', '' . "\0" . 'Mailing\\Entity\\EmailMessageEvent' . "\0" . 'emailMessage', '' . "\0" . 'Mailing\\Entity\\EmailMessageEvent' . "\0" . 'event', '' . "\0" . 'Mailing\\Entity\\EmailMessageEvent' . "\0" . 'time', '' . "\0" . 'Mailing\\Entity\\EmailMessageEvent' . "\0" . 'messageId', '' . "\0" . 'Mailing\\Entity\\EmailMessageEvent' . "\0" . 'email', '' . "\0" . 'Mailing\\Entity\\EmailMessageEvent' . "\0" . 'campaign', '' . "\0" . 'Mailing\\Entity\\EmailMessageEvent' . "\0" . 'smtpReply', '' . "\0" . 'Mailing\\Entity\\EmailMessageEvent' . "\0" . 'url', '' . "\0" . 'Mailing\\Entity\\EmailMessageEvent' . "\0" . 'ip', '' . "\0" . 'Mailing\\Entity\\EmailMessageEvent' . "\0" . 'agent', '' . "\0" . 'Mailing\\Entity\\EmailMessageEvent' . "\0" . 'error', '' . "\0" . 'Mailing\\Entity\\EmailMessageEvent' . "\0" . 'errorRelatedTo', '' . "\0" . 'Mailing\\Entity\\EmailMessageEvent' . "\0" . 'source'];
        }

        return ['__isInitialized__', '' . "\0" . 'Mailing\\Entity\\EmailMessageEvent' . "\0" . 'id', '' . "\0" . 'Mailing\\Entity\\EmailMessageEvent' . "\0" . 'emailMessage', '' . "\0" . 'Mailing\\Entity\\EmailMessageEvent' . "\0" . 'event', '' . "\0" . 'Mailing\\Entity\\EmailMessageEvent' . "\0" . 'time', '' . "\0" . 'Mailing\\Entity\\EmailMessageEvent' . "\0" . 'messageId', '' . "\0" . 'Mailing\\Entity\\EmailMessageEvent' . "\0" . 'email', '' . "\0" . 'Mailing\\Entity\\EmailMessageEvent' . "\0" . 'campaign', '' . "\0" . 'Mailing\\Entity\\EmailMessageEvent' . "\0" . 'smtpReply', '' . "\0" . 'Mailing\\Entity\\EmailMessageEvent' . "\0" . 'url', '' . "\0" . 'Mailing\\Entity\\EmailMessageEvent' . "\0" . 'ip', '' . "\0" . 'Mailing\\Entity\\EmailMessageEvent' . "\0" . 'agent', '' . "\0" . 'Mailing\\Entity\\EmailMessageEvent' . "\0" . 'error', '' . "\0" . 'Mailing\\Entity\\EmailMessageEvent' . "\0" . 'errorRelatedTo', '' . "\0" . 'Mailing\\Entity\\EmailMessageEvent' . "\0" . 'source'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (EmailMessageEvent $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId(?int $id): \Mailing\Entity\EmailMessageEvent
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailMessage(): \Mailing\Entity\EmailMessage
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailMessage', []);

        return parent::getEmailMessage();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailMessage(\Mailing\Entity\EmailMessage $emailMessage): \Mailing\Entity\EmailMessageEvent
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailMessage', [$emailMessage]);

        return parent::setEmailMessage($emailMessage);
    }

    /**
     * {@inheritDoc}
     */
    public function getEvent(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEvent', []);

        return parent::getEvent();
    }

    /**
     * {@inheritDoc}
     */
    public function setEvent(string $event): \Mailing\Entity\EmailMessageEvent
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEvent', [$event]);

        return parent::setEvent($event);
    }

    /**
     * {@inheritDoc}
     */
    public function getTime(): ?\DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTime', []);

        return parent::getTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setTime(?\DateTime $time): \Mailing\Entity\EmailMessageEvent
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTime', [$time]);

        return parent::setTime($time);
    }

    /**
     * {@inheritDoc}
     */
    public function getMessageId(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMessageId', []);

        return parent::getMessageId();
    }

    /**
     * {@inheritDoc}
     */
    public function setMessageId(?int $messageId): \Mailing\Entity\EmailMessageEvent
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMessageId', [$messageId]);

        return parent::setMessageId($messageId);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail(?string $email): \Mailing\Entity\EmailMessageEvent
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getCampaign(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCampaign', []);

        return parent::getCampaign();
    }

    /**
     * {@inheritDoc}
     */
    public function setCampaign(?string $campaign): \Mailing\Entity\EmailMessageEvent
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCampaign', [$campaign]);

        return parent::setCampaign($campaign);
    }

    /**
     * {@inheritDoc}
     */
    public function getSmtpReply(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSmtpReply', []);

        return parent::getSmtpReply();
    }

    /**
     * {@inheritDoc}
     */
    public function setSmtpReply(?string $smtpReply): \Mailing\Entity\EmailMessageEvent
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSmtpReply', [$smtpReply]);

        return parent::setSmtpReply($smtpReply);
    }

    /**
     * {@inheritDoc}
     */
    public function getUrl(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUrl', []);

        return parent::getUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setUrl(?string $url): \Mailing\Entity\EmailMessageEvent
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUrl', [$url]);

        return parent::setUrl($url);
    }

    /**
     * {@inheritDoc}
     */
    public function getIp(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIp', []);

        return parent::getIp();
    }

    /**
     * {@inheritDoc}
     */
    public function setIp(?string $ip): \Mailing\Entity\EmailMessageEvent
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIp', [$ip]);

        return parent::setIp($ip);
    }

    /**
     * {@inheritDoc}
     */
    public function getAgent(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAgent', []);

        return parent::getAgent();
    }

    /**
     * {@inheritDoc}
     */
    public function setAgent(?string $agent): \Mailing\Entity\EmailMessageEvent
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAgent', [$agent]);

        return parent::setAgent($agent);
    }

    /**
     * {@inheritDoc}
     */
    public function getError(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getError', []);

        return parent::getError();
    }

    /**
     * {@inheritDoc}
     */
    public function setError(?string $error): \Mailing\Entity\EmailMessageEvent
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setError', [$error]);

        return parent::setError($error);
    }

    /**
     * {@inheritDoc}
     */
    public function getErrorRelatedTo(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getErrorRelatedTo', []);

        return parent::getErrorRelatedTo();
    }

    /**
     * {@inheritDoc}
     */
    public function setErrorRelatedTo(?string $errorRelatedTo): \Mailing\Entity\EmailMessageEvent
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setErrorRelatedTo', [$errorRelatedTo]);

        return parent::setErrorRelatedTo($errorRelatedTo);
    }

    /**
     * {@inheritDoc}
     */
    public function getSource(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSource', []);

        return parent::getSource();
    }

    /**
     * {@inheritDoc}
     */
    public function setSource(?string $source): \Mailing\Entity\EmailMessageEvent
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSource', [$source]);

        return parent::setSource($source);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getResourceId(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResourceId', []);

        return parent::getResourceId();
    }

    /**
     * {@inheritDoc}
     */
    public function get(string $switch): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'get', [$switch]);

        return parent::get($switch);
    }

    /**
     * {@inheritDoc}
     */
    public function isEmpty(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEmpty', []);

        return parent::isEmpty();
    }

    /**
     * {@inheritDoc}
     */
    public function has(string $prop): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'has', [$prop]);

        return parent::has($prop);
    }

}
